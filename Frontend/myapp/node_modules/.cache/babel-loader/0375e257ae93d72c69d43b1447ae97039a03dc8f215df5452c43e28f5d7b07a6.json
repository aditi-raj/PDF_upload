{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\PDF_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\MainContent\\\\MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styles from './MainContent.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainContent({\n  messages,\n  isLoading\n}) {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const formatAssistantMessage = content => {\n    return content.split('\\n').map((line, index) => {\n      // Handle lines that start with an asterisk (bullet points)\n      if (line.trim().startsWith('*')) {\n        // Remove the asterisk and trim the space\n        let bulletText = line.trim().substring(1).trim();\n\n        // Handle any bold text within the bullet point\n        const boldPattern = /\\*\\*(.*?)\\*\\*/g;\n        const containsBold = bulletText.match(boldPattern);\n        if (containsBold) {\n          // Replace the bold pattern and create elements\n          const elements = bulletText.split(boldPattern).map((part, i) => {\n            if (i % 2 === 1) {\n              // This is the bold part\n              return /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: part\n              }, `bold-${i}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 36\n              }, this);\n            }\n            return part;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.bulletContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.bullet,\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.bulletText,\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.bulletContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.bullet,\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.bulletText,\n              children: bulletText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this);\n        }\n      }\n      // Handle regular text (might contain bold)\n      else if (line.trim()) {\n        const boldPattern = /\\*\\*(.*?)\\*\\*/g;\n        const containsBold = line.match(boldPattern);\n        if (containsBold) {\n          const elements = line.split(boldPattern).map((part, i) => {\n            if (i % 2 === 1) {\n              // This is the bold part\n              return /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: part\n              }, `bold-${i}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 36\n              }, this);\n            }\n            return part;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.paragraph,\n            children: elements\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.paragraph,\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this);\n      }\n      return null;\n    }).filter(Boolean);\n  };\n\n  // Change to:\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContent,\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.message} ${styles[message.type]}`,\n      children: [message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avatar,\n        children: \"You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), message.type === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.assistantAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"avatar.png\",\n          alt: \"AI\",\n          className: styles.aiIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type === 'system' ? styles.systemMessage : styles.messageContent,\n        children: message.type === 'assistant' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formattedContent,\n          children: formatAssistantMessage(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this) : message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingDots,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContent, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useRef","useEffect","styles","jsxDEV","_jsxDEV","MainContent","messages","isLoading","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatAssistantMessage","content","split","map","line","index","trim","startsWith","bulletText","substring","boldPattern","containsBold","match","elements","part","i","children","fileName","_jsxFileName","lineNumber","columnNumber","className","bulletContainer","bullet","paragraph","filter","Boolean","mainContent","message","type","avatar","assistantAvatar","src","alt","aiIcon","systemMessage","messageContent","formattedContent","loading","loadingDots","ref","_c","$RefreshReg$"],"sources":["C:/Users/aditi/PDF_upload/Frontend/myapp/src/components/MainContent/MainContent.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport styles from './MainContent.module.css';\r\n\r\nfunction MainContent({ messages, isLoading }) {\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const formatAssistantMessage = (content) => {\r\n        return content.split('\\n').map((line, index) => {\r\n            // Handle lines that start with an asterisk (bullet points)\r\n            if (line.trim().startsWith('*')) {\r\n                // Remove the asterisk and trim the space\r\n                let bulletText = line.trim().substring(1).trim();\r\n                \r\n                // Handle any bold text within the bullet point\r\n                const boldPattern = /\\*\\*(.*?)\\*\\*/g;\r\n                const containsBold = bulletText.match(boldPattern);\r\n                \r\n                if (containsBold) {\r\n                    // Replace the bold pattern and create elements\r\n                    const elements = bulletText.split(boldPattern).map((part, i) => {\r\n                        if (i % 2 === 1) {  // This is the bold part\r\n                            return <strong key={`bold-${i}`}>{part}</strong>;\r\n                        }\r\n                        return part;\r\n                    });\r\n                    \r\n                    return (\r\n                        <div key={index} className={styles.bulletContainer}>\r\n                            <span className={styles.bullet}>•</span>\r\n                            <span className={styles.bulletText}>{elements}</span>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div key={index} className={styles.bulletContainer}>\r\n                            <span className={styles.bullet}>•</span>\r\n                            <span className={styles.bulletText}>{bulletText}</span>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            // Handle regular text (might contain bold)\r\n            else if (line.trim()) {\r\n                const boldPattern = /\\*\\*(.*?)\\*\\*/g;\r\n                const containsBold = line.match(boldPattern);\r\n                \r\n                if (containsBold) {\r\n                    const elements = line.split(boldPattern).map((part, i) => {\r\n                        if (i % 2 === 1) {  // This is the bold part\r\n                            return <strong key={`bold-${i}`}>{part}</strong>;\r\n                        }\r\n                        return part;\r\n                    });\r\n                    \r\n                    return (\r\n                        <div key={index} className={styles.paragraph}>\r\n                            {elements}\r\n                        </div>\r\n                    );\r\n                }\r\n                \r\n                return (\r\n                    <div key={index} className={styles.paragraph}>\r\n                        {line}\r\n                    </div>\r\n                );\r\n            }\r\n            return null;\r\n        }).filter(Boolean);\r\n    };\r\n\r\n    // Change to:\r\nreturn (\r\n    <div className={styles.mainContent}>\r\n        {messages.map((message, index) => (\r\n                <div \r\n                    key={index} \r\n                    className={`${styles.message} ${styles[message.type]}`}\r\n                >\r\n                    {message.type === 'user' && (\r\n                        <div className={styles.avatar}>You</div>\r\n                    )}\r\n                    {message.type === 'assistant' && (\r\n                        <div className={styles.assistantAvatar}>\r\n                            <img src=\"avatar.png\" alt=\"AI\" className={styles.aiIcon} />\r\n                        </div>\r\n                    )}\r\n            <div className={message.type === 'system' ? styles.systemMessage : styles.messageContent}>\r\n                        {message.type === 'assistant' ? (\r\n                            <div className={styles.formattedContent}>\r\n                                {formatAssistantMessage(message.content)}\r\n                            </div>\r\n                        ) : (\r\n                            message.content\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {isLoading && (\r\n                <div className={styles.loading}>\r\n                    <div className={styles.loadingDots}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}