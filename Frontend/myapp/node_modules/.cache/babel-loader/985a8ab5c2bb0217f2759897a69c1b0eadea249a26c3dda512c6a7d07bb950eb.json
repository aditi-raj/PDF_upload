{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\Pdf_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import styles from './Header.module.css';\n\n// function Header() {\n//     return (\n//         <header className={styles.header}>\n//         <div className={styles.logo}>\n//             <img src=\"AI Planet Logo.png\" alt=\"AI Planet Logo\" className={styles.logoImg} />  \n//         </div>\n//         <button className={styles.uploadButton}>\n//             <span className={styles.plusSign}>+</span> Upload PDF\n//         </button>\n\n//         </header>\n//     );\n//     }\n\n// export default Header;\n\nimport React, { useState } from 'react';\nimport styles from './Header.module.css';\nimport UploadModal from '../UploadModal/UploadModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header({\n  setUploadedFile\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  console.log('modal state', isModalOpen);\n  console.log(\"Header rendering\"); // Add this to check if component renders\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"AI Planet Logo.png\",\n          alt: \"AI Planet Logo\",\n          className: styles.logoImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.uploadButton,\n        onClick: () => console.log(\"Button clicked\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.plusSign,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), \" Upload PDF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UploadModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      setUploadedFile: setUploadedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Header, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","styles","UploadModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","setUploadedFile","_s","isModalOpen","setIsModalOpen","console","log","children","className","header","logo","src","alt","logoImg","fileName","_jsxFileName","lineNumber","columnNumber","uploadButton","onClick","plusSign","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/aditi/Pdf_upload/Frontend/myapp/src/components/Header/Header.js"],"sourcesContent":["// import React from 'react';\r\n// import styles from './Header.module.css';\r\n\r\n// function Header() {\r\n//     return (\r\n//         <header className={styles.header}>\r\n//         <div className={styles.logo}>\r\n//             <img src=\"AI Planet Logo.png\" alt=\"AI Planet Logo\" className={styles.logoImg} />  \r\n//         </div>\r\n//         <button className={styles.uploadButton}>\r\n//             <span className={styles.plusSign}>+</span> Upload PDF\r\n//         </button>\r\n\r\n//         </header>\r\n//     );\r\n//     }\r\n\r\n// export default Header;\r\n\r\nimport React, { useState } from 'react';\r\nimport styles from './Header.module.css';\r\nimport UploadModal from '../UploadModal/UploadModal';\r\n\r\nfunction Header({ setUploadedFile }) {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    console.log('modal state',isModalOpen);\r\n    console.log(\"Header rendering\"); // Add this to check if component renders\r\n\r\n    return (\r\n        <>\r\n        <header className={styles.header}>\r\n            <div className={styles.logo}>\r\n                <img src=\"AI Planet Logo.png\" alt=\"AI Planet Logo\" className={styles.logoImg} />  \r\n            </div>\r\n            <button \r\n                className={styles.uploadButton}\r\n                onClick={() => console.log(\"Button clicked\")}\r\n            >\r\n                <span className={styles.plusSign}>+</span> Upload PDF\r\n            </button>\r\n        </header>\r\n\r\n        <UploadModal \r\n                isOpen={isModalOpen}\r\n                onClose={() => setIsModalOpen(false)}\r\n                setUploadedFile={setUploadedFile}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,MAAMA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrDY,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,WAAW,CAAC;EACtCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;;EAEjC,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACAV,OAAA;MAAQW,SAAS,EAAEd,MAAM,CAACe,MAAO;MAAAF,QAAA,gBAC7BV,OAAA;QAAKW,SAAS,EAAEd,MAAM,CAACgB,IAAK;QAAAH,QAAA,eACxBV,OAAA;UAAKc,GAAG,EAAC,oBAAoB;UAACC,GAAG,EAAC,gBAAgB;UAACJ,SAAS,EAAEd,MAAM,CAACmB;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACNpB,OAAA;QACIW,SAAS,EAAEd,MAAM,CAACwB,YAAa;QAC/BC,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE;QAAAC,QAAA,gBAE7CV,OAAA;UAAMW,SAAS,EAAEd,MAAM,CAAC0B,QAAS;UAAAb,QAAA,EAAC;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAETpB,OAAA,CAACF,WAAW;MACJ0B,MAAM,EAAElB,WAAY;MACpBmB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAAC,KAAK,CAAE;MACrCH,eAAe,EAAEA;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA,eACJ,CAAC;AAEX;AAACf,EAAA,CA1BQF,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA4Bf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}