{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\Pdf_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\UploadModal\\\\UploadModal.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styles from './UploadModal.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadModal({\n  isOpen,\n  onClose,\n  setUploadedFile\n}) {\n  _s();\n  const onDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0];\n    if ((file === null || file === void 0 ? void 0 : file.type) !== 'application/pdf') {\n      alert('Please upload a PDF file');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) throw new Error('Upload failed');\n      const data = await response.json();\n      setUploadedFile(data);\n      onClose();\n    } catch (err) {\n      alert(err.message);\n    }\n  }, [onClose, setUploadedFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    multiple: false\n  });\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalOverlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: styles.dropzone,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/upload-icon.svg\",\n          alt: \"Upload\",\n          className: styles.uploadIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drop the PDF file here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop a PDF file here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.orText,\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.browseButton,\n            children: \"Browse Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadModal, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadModal;\nexport default UploadModal;\nvar _c;\n$RefreshReg$(_c, \"UploadModal\");","map":{"version":3,"names":["React","useCallback","useDropzone","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadModal","isOpen","onClose","setUploadedFile","_s","onDrop","acceptedFiles","file","type","alert","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","err","message","getRootProps","getInputProps","isDragActive","accept","multiple","className","modalOverlay","children","modal","closeButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dropzone","src","alt","uploadIcon","orText","browseButton","_c","$RefreshReg$"],"sources":["C:/Users/aditi/Pdf_upload/Frontend/myapp/src/components/UploadModal/UploadModal.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport styles from './UploadModal.module.css';\r\n\r\nfunction UploadModal({ isOpen, onClose, setUploadedFile }) {\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        const file = acceptedFiles[0];\r\n        \r\n        if (file?.type !== 'application/pdf') {\r\n            alert('Please upload a PDF file');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n\r\n            const response = await fetch('http://localhost:8000/upload', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Upload failed');\r\n\r\n            const data = await response.json();\r\n            setUploadedFile(data);\r\n            onClose();\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    }, [onClose, setUploadedFile]);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: {'application/pdf': ['.pdf']},\r\n        multiple: false\r\n    });\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className={styles.modalOverlay}>\r\n            <div className={styles.modal}>\r\n                <button className={styles.closeButton} onClick={onClose}>Ã—</button>\r\n                <h2>Upload PDF</h2>\r\n                <div {...getRootProps()} className={styles.dropzone}>\r\n                    <input {...getInputProps()} />\r\n                    <img src=\"/upload-icon.svg\" alt=\"Upload\" className={styles.uploadIcon} />\r\n                    {isDragActive ? (\r\n                        <p>Drop the PDF file here...</p>\r\n                    ) : (\r\n                        <>\r\n                            <p>Drag & drop a PDF file here</p>\r\n                            <p className={styles.orText}>OR</p>\r\n                            <button className={styles.browseButton}>Browse Files</button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}