{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\PDF_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\MainContent\\\\MainContent.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect } from 'react';\n// import styles from './MainContent.module.css';\n\n// function MainContent({ messages, isLoading }) {\n//     const messagesEndRef = useRef(null);\n\n//     const scrollToBottom = () => {\n//         messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//     };\n\n//     useEffect(() => {\n//         scrollToBottom();\n//     }, [messages]);\n\n//     return (\n//         <div className={styles.mainContent}>\n//             {messages.length === 0 && (\n//                 <div className={styles.emptyState}>\n//                     Upload a PDF and ask questions about it!\n//                 </div>\n//             )}\n//             {messages.map((message, index) => (\n//                 <div \n//                     key={index} \n//                     className={`${styles.message} ${styles[message.type]}`}\n//                 >\n//                     {message.type === 'user' && (\n//                         <div className={styles.avatar}>You</div>\n//                     )}\n//                     {message.type === 'assistant' && (\n//                         <div className={styles.avatar}>AI</div>\n//                     )}\n//                     <div className={styles.messageContent}>\n//                         {message.content}\n//                     </div>\n//                 </div>\n//             ))}\n//             {isLoading && (\n//                 <div className={styles.loading}>\n//                     <div className={styles.loadingDots}>\n//                         <span></span>\n//                         <span></span>\n//                         <span></span>\n//                     </div>\n//                 </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//         </div>\n//     );\n// }\n\n// export default MainContent;\n\nimport React, { useRef, useEffect } from 'react';\nimport styles from './MainContent.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainContent({\n  messages,\n  isLoading\n}) {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const formatAssistantMessage = content => {\n    return content.split('\\n').map((line, index) => {\n      // Handle bold text (text between double asterisks)\n      const boldPattern = /\\*\\*(.*?)\\*\\*/g;\n      const containsBold = line.match(boldPattern);\n      if (containsBold) {\n        // Replace the bold pattern and create elements\n        const elements = line.split(boldPattern).map((part, i) => {\n          if (i % 2 === 1) {\n            // This is the bold part\n            return /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: part\n            }, `bold-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 32\n            }, this);\n          }\n          return part;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.paragraph,\n          children: elements\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this);\n      }\n      // Check if line is a bullet point\n      if (line.startsWith('*')) {\n        const bulletText = line.slice(1).trim();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.bulletContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.bullet,\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.bulletText,\n            children: bulletText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this);\n      }\n      // Regular text\n      else if (line.trim()) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.paragraph,\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this);\n      }\n      return null;\n    }).filter(Boolean); // Remove null entries\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContent,\n    children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyState,\n      children: \"Upload a PDF and ask questions about it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.message} ${styles[message.type]}`,\n      children: [message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avatar,\n        children: \"You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this), message.type === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avatar,\n        children: \"AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageContent,\n        children: message.type === 'assistant' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formattedContent,\n          children: formatAssistantMessage(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this) : message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingDots,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(MainContent, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useRef","useEffect","styles","jsxDEV","_jsxDEV","MainContent","messages","isLoading","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatAssistantMessage","content","split","map","line","index","boldPattern","containsBold","match","elements","part","i","children","fileName","_jsxFileName","lineNumber","columnNumber","className","paragraph","startsWith","bulletText","slice","trim","bulletContainer","bullet","filter","Boolean","mainContent","length","emptyState","message","type","avatar","messageContent","formattedContent","loading","loadingDots","ref","_c","$RefreshReg$"],"sources":["C:/Users/aditi/PDF_upload/Frontend/myapp/src/components/MainContent/MainContent.js"],"sourcesContent":["// import React, { useRef, useEffect } from 'react';\r\n// import styles from './MainContent.module.css';\r\n\r\n// function MainContent({ messages, isLoading }) {\r\n//     const messagesEndRef = useRef(null);\r\n\r\n//     const scrollToBottom = () => {\r\n//         messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         scrollToBottom();\r\n//     }, [messages]);\r\n\r\n//     return (\r\n//         <div className={styles.mainContent}>\r\n//             {messages.length === 0 && (\r\n//                 <div className={styles.emptyState}>\r\n//                     Upload a PDF and ask questions about it!\r\n//                 </div>\r\n//             )}\r\n//             {messages.map((message, index) => (\r\n//                 <div \r\n//                     key={index} \r\n//                     className={`${styles.message} ${styles[message.type]}`}\r\n//                 >\r\n//                     {message.type === 'user' && (\r\n//                         <div className={styles.avatar}>You</div>\r\n//                     )}\r\n//                     {message.type === 'assistant' && (\r\n//                         <div className={styles.avatar}>AI</div>\r\n//                     )}\r\n//                     <div className={styles.messageContent}>\r\n//                         {message.content}\r\n//                     </div>\r\n//                 </div>\r\n//             ))}\r\n//             {isLoading && (\r\n//                 <div className={styles.loading}>\r\n//                     <div className={styles.loadingDots}>\r\n//                         <span></span>\r\n//                         <span></span>\r\n//                         <span></span>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//             <div ref={messagesEndRef} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MainContent;\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\nimport styles from './MainContent.module.css';\r\n\r\nfunction MainContent({ messages, isLoading }) {\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const formatAssistantMessage = (content) => {\r\n        return content.split('\\n').map((line, index) => {\r\n            // Handle bold text (text between double asterisks)\r\n            const boldPattern = /\\*\\*(.*?)\\*\\*/g;\r\n            const containsBold = line.match(boldPattern);\r\n            \r\n            if (containsBold) {\r\n                // Replace the bold pattern and create elements\r\n                const elements = line.split(boldPattern).map((part, i) => {\r\n                    if (i % 2 === 1) {  // This is the bold part\r\n                        return <strong key={`bold-${i}`}>{part}</strong>;\r\n                    }\r\n                    return part;\r\n                });\r\n                \r\n                return (\r\n                    <div key={index} className={styles.paragraph}>\r\n                        {elements}\r\n                    </div>\r\n                );\r\n            }\r\n            // Check if line is a bullet point\r\n            if (line.startsWith('*')) {\r\n                const bulletText = line.slice(1).trim();\r\n                return (\r\n                    <div key={index} className={styles.bulletContainer}>\r\n                        <span className={styles.bullet}>•</span>\r\n                        <span className={styles.bulletText}>{bulletText}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            // Regular text\r\n            else if (line.trim()) {\r\n                return (\r\n                    <div key={index} className={styles.paragraph}>\r\n                        {line}\r\n                    </div>\r\n                );\r\n            }\r\n            return null;\r\n        }).filter(Boolean); // Remove null entries\r\n    };\r\n\r\n    return (\r\n        <div className={styles.mainContent}>\r\n            {messages.length === 0 && (\r\n                <div className={styles.emptyState}>\r\n                    Upload a PDF and ask questions about it!\r\n                </div>\r\n            )}\r\n            {messages.map((message, index) => (\r\n                <div \r\n                    key={index} \r\n                    className={`${styles.message} ${styles[message.type]}`}\r\n                >\r\n                    {message.type === 'user' && (\r\n                        <div className={styles.avatar}>You</div>\r\n                    )}\r\n                    {message.type === 'assistant' && (\r\n                        <div className={styles.avatar}>AI</div>\r\n                    )}\r\n                    <div className={styles.messageContent}>\r\n                        {message.type === 'assistant' ? (\r\n                            <div className={styles.formattedContent}>\r\n                                {formatAssistantMessage(message.content)}\r\n                            </div>\r\n                        ) : (\r\n                            message.content\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {isLoading && (\r\n                <div className={styles.loading}>\r\n                    <div className={styles.loadingDots}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}