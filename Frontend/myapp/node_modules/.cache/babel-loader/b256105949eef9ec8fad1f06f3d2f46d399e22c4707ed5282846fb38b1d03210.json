{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\Pdf_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Header.module.css';\nimport UploadModal from '../UploadModal/UploadModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header({\n  setUploadedFile\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"AI Planet Logo.png\",\n          alt: \"AI Planet Logo\",\n          className: styles.logoImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.uploadButton,\n        onClick: () => setIsModalOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.plusSign,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), \" Upload PDF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      setUploadedFile: setUploadedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Header, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","styles","UploadModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","setUploadedFile","_s","isModalOpen","setIsModalOpen","children","className","header","logo","src","alt","logoImg","fileName","_jsxFileName","lineNumber","columnNumber","uploadButton","onClick","plusSign","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/aditi/Pdf_upload/Frontend/myapp/src/components/Header/Header.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Header.module.css';\r\nimport UploadModal from '../UploadModal/UploadModal';\r\n\r\nfunction Header({ setUploadedFile }) {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                <div className={styles.logo}>\r\n                    <img src=\"AI Planet Logo.png\" alt=\"AI Planet Logo\" className={styles.logoImg} />  \r\n                </div>\r\n                <button \r\n                    className={styles.uploadButton}\r\n                    onClick={() => setIsModalOpen(true)}\r\n                >\r\n                    <span className={styles.plusSign}>+</span> Upload PDF\r\n                </button>\r\n            </header>\r\n\r\n            <UploadModal \r\n                isOpen={isModalOpen}\r\n                onClose={() => setIsModalOpen(false)}\r\n                setUploadedFile={setUploadedFile}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,MAAMA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,oBACII,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAQS,SAAS,EAAEZ,MAAM,CAACa,MAAO;MAAAF,QAAA,gBAC7BR,OAAA;QAAKS,SAAS,EAAEZ,MAAM,CAACc,IAAK;QAAAH,QAAA,eACxBR,OAAA;UAAKY,GAAG,EAAC,oBAAoB;UAACC,GAAG,EAAC,gBAAgB;UAACJ,SAAS,EAAEZ,MAAM,CAACiB;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACNlB,OAAA;QACIS,SAAS,EAAEZ,MAAM,CAACsB,YAAa;QAC/BC,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAAC,IAAI,CAAE;QAAAC,QAAA,gBAEpCR,OAAA;UAAMS,SAAS,EAAEZ,MAAM,CAACwB,QAAS;UAAAb,QAAA,EAAC;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAETlB,OAAA,CAACF,WAAW;MACRwB,MAAM,EAAEhB,WAAY;MACpBiB,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAAC,KAAK,CAAE;MACrCH,eAAe,EAAEA;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA,eACJ,CAAC;AAEX;AAACb,EAAA,CAxBQF,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA0Bf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}