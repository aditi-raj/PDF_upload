{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\PDF_upload\\\\Frontend\\\\myapp\\\\src\\\\components\\\\ChatInput\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styles from './ChatInput.module.css';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInput({\n  onSendMessage,\n  disabled\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const debouncedSendMessage = useCallback(_.debounce(async message => {\n    try {\n      const response = await fetch('http://localhost:8000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: message.trim()\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get answer');\n      }\n      const data = await response.json();\n      onSendMessage(message, data.answer);\n    } catch (error) {\n      console.error('Error:', error);\n      onSendMessage(message, \"Sorry, I couldn't process your question. Please try again.\");\n    }\n  }, 1000),\n  // 1 second delay\n  [onSendMessage]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (message.trim() && !disabled) {\n      debouncedSendMessage(message);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.chatInput,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: disabled ? \"Upload a PDF to start asking questions...\" : \"Ask a question...\",\n      disabled: disabled,\n      className: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: disabled || !message.trim(),\n      className: styles.sendButton,\n      \"aria-label\": \"Send message\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"send-svgrepo-com.svg\",\n        alt: \"Send\",\n        className: styles.sendIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInput, \"mZ5sxYaU6KYXovjQoYCcGO4jfXc=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useCallback","styles","_","jsxDEV","_jsxDEV","ChatInput","onSendMessage","disabled","_s","message","setMessage","debouncedSendMessage","debounce","response","fetch","method","headers","body","JSON","stringify","question","trim","ok","Error","data","json","answer","error","console","handleSubmit","e","preventDefault","className","chatInput","onSubmit","children","type","value","onChange","target","placeholder","input","fileName","_jsxFileName","lineNumber","columnNumber","sendButton","src","alt","sendIcon","_c","$RefreshReg$"],"sources":["C:/Users/aditi/PDF_upload/Frontend/myapp/src/components/ChatInput/ChatInput.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport styles from './ChatInput.module.css';\r\nimport _ from 'lodash';\r\n\r\nfunction ChatInput({ onSendMessage, disabled }) {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const debouncedSendMessage = useCallback(\r\n        _.debounce(async (message) => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/ask', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        question: message.trim()\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to get answer');\r\n                }\r\n\r\n                const data = await response.json();\r\n                onSendMessage(message, data.answer);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                onSendMessage(message, \"Sorry, I couldn't process your question. Please try again.\");\r\n            }\r\n        }, 1000), // 1 second delay\r\n        [onSendMessage]\r\n    );\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && !disabled) {\r\n            debouncedSendMessage(message);\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={styles.chatInput} onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder={disabled ? \"Upload a PDF to start asking questions...\" : \"Ask a question...\"}\r\n                disabled={disabled}\r\n                className={styles.input}\r\n            />\r\n            <button \r\n                type=\"submit\" \r\n                disabled={disabled || !message.trim()}\r\n                className={styles.sendButton}\r\n                aria-label=\"Send message\"\r\n            >\r\n                <img \r\n                    src=\"send-svgrepo-com.svg\" \r\n                    alt=\"Send\" \r\n                    className={styles.sendIcon}\r\n                />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ChatInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}